name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        streamlit-version: [null]
        include:
          # Test with streamlit <1.4.0 and >=1.4.0. See https://github.com/whitphx/streamlit-server-state/issues/64
          - python-version: 3.9
            streamlit-version: 1.0.0
          - python-version: 3.9
            streamlit-version: 1.4.0
          # Test with streamlit >=1.6.0. See https://github.com/whitphx/streamlit-webrtc/issues/709
          - python-version: 3.9
            streamlit-version: 1.6.0
          # Test with streamlit >=1.8.0. See https://github.com/whitphx/streamlit-webrtc/issues/759
          - python-version: 3.9
            streamlit-version: 1.8.0
          # Test with streamlit >=1.12.0. See https://github.com/whitphx/streamlit-server-state/issues/128
          - python-version: 3.9
            streamlit-version: 1.12.0

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4.2.0
      with:
        python-version: ${{ matrix.python-version }}

    # Ref: https://github.com/python-poetry/poetry/blob/ecb030e1f0b7c13cc11971f00ee5012e82a892bc/.github/workflows/main.yml#L49-L77
    - name: Get full Python version
      id: full-python-version
      run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")
    - name: Install poetry
      run: |
        curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python -
        echo "$HOME/.poetry/bin" >> $GITHUB_PATH
    - name: Configure poetry
      run: poetry config virtualenvs.in-project true
    - name: Set up cache
      uses: actions/cache@v3.0.8
      id: cache
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
    - name: Ensure cache is healthy
      if: steps.cache.outputs.cache-hit == 'true'
      run: timeout 10s poetry run pip --version || rm -rf .venv

    - name: Install a specific version of Streamlit
      if: ${{ matrix.streamlit-version }}
      run: poetry add -D streamlit=="${STREAMLIT_VERSION}"
      env:
        STREAMLIT_VERSION: ${{ matrix.streamlit-version }}
    - name: Install dependencies
      run: poetry install
    - name: Show Python and Streamlit versions
      run: |
        python -V
        poetry run streamlit version
    - name: Lint with black, isort, and flake8
      run: |
        poetry run black . --check
        poetry run isort . --check
        poetry run flake8
    - name: Type checking with mypy
      run: |
        poetry run mypy .
    - name: Test with pytest
      run: |
        poetry run pytest
